pipeline {
    agent any

    tools {
        go 'go-1.24.6'
        git 'git'
    }

    parameters {
        choice(name: 'ENV', choices: ['dev', 'prod'], description: 'Choose environment')
    }

    stages {
        stage('Checkout') {
            steps {
                sh 'rm -rf *'
                checkout scm
            }
        }

        stage('Build Go App') {
            steps {
                sh """
                mkdir -p bin
                cd app
                go mod tidy
                GOOS=linux GOARCH=amd64 go build -o ../bin/app main.go
                """
            }
        }

        stage('Build Docker Image') {
            steps {
                sh """
                docker build \
                  -t app:${params.ENV} \
                  -f app/Dockerfile .

                docker tag app:${params.ENV} registry-docker-registry.shared.svc.cluster.local:5000/app:${params.ENV}
                docker push registry-docker-registry.shared.svc.cluster.local:5000/app:${params.ENV}
                """
            }
        }

        // stage('Tests') {
        //     steps {
        //         sh """
        //             go test
        //         """
        //     }
        // }

        stage('Deploy') {
            steps {
                sh """
                    helm install --set image.repository=registry-docker-registry.shared.svc.cluster.local:5000/app --set image.tag=${params.ENV} go-app-${params.ENV} ./app/helm --namespace ${params.ENV}
                """
            }
        }
    }

    post {
        always {
            echo "Cleaning up Docker images..."
            sh "docker rmi -f app:${params.ENV}"
        }
    }
}
