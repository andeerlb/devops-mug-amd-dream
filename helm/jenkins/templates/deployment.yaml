apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: jenkins
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8080
            - containerPort: 50000
          env:
            - name: JENKINS_ADMIN_ID
              valueFrom:
                secretKeyRef:
                  name: jenkins-admin-secret
                  key: JENKINS_ADMIN_ID
            - name: JENKINS_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jenkins-admin-secret
                  key: JENKINS_ADMIN_PASSWORD
            - name: DOCKER_HOST
              value: "tcp://localhost:2375"
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
        - name: dind
          image: docker:24-dind
          securityContext:
            privileged: true
          args:
            - --host=tcp://0.0.0.0:2375
          ports:
            - containerPort: 2375
          env:
            - name: DOCKER_TLS_CERTDIR
              value: ""
          volumeMounts:
            - name: dockersock
              mountPath: /etc/docker/daemon.json
              subPath: daemon.json
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-pvc
        - name: dockersock
          configMap:
            name: docker-daemon-config
            items:
              - key: daemon.json
                path: daemon.json
